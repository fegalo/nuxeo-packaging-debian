#!/bin/bash -e

. /usr/lib/@package.name@/internal/pkg-helper-functions

show_help() {

    echo "Usage: $0 [-h] [-n] -p product"
    echo "    -h    Show this help"
    echo "    -n    Dry run"
    echo "    -p    Product to migrate (dm,dam,cmf)"

}

while getopts ":nhp:" opt
do
    case $opt in
    n)
        DRY_RUN="true"
        ;;
    p)
        PRODUCT=$OPTARG
        ;;
    h)
        show_help
        exit 0
        ;;
    \?)
        echo "Invalid option: -$OPTARG" >&2
        exit 1
        ;;
    :)
        echo "Option -$OPTARG requires an argument" >&2
        exit 1
        ;;
    esac
done

if [ "$PRODUCT" != "dm" ] && [ "$PRODUCT" != "dam" ] && [ "$PRODUCT" != "cmf" ]; then
    echo "Product missing or not supported"
    show_help
    exit 1
fi


if [ "$DRY_RUN" = "true" ]; then
    NUXEO_CONF="/tmp/nuxeo.conf.migrated"
fi

OLDCONF="/etc/nuxeo-$PRODUCT/nuxeo.conf"
OLDINIT="/etc/init.d/nuxeo-$PRODUCT"
OLDDATA="/var/lib/nuxeo-$PRODUCT"
OLDDB="nuxeo$PRODUCT"
OLDLOG="/var/log/nuxeo-$PRODUCT"
OLDPID="/var/run/nuxeo-$PRODUCT"


# Sanity checks

if [ ! -f "$OLDCONF" ]; then
    echo "ERROR: $OLDCONF does not exist - cannot migrate"
    exit 1
fi
if [ "$UID" != "0" ] && [ "$DRY_RUN" != "true" ]; then
    echo "This script must be run as root (or with sudo)"
    exit 1
fi


# Save conf file from the nuxeo pacakge

if [ -f "$NUXEO_CONF" ]; then
    mv "$NUXEO_CONF" "$NUXEO_CONF.dpkg-dist"
fi

# Replace it with the conf file from the old package

if [ "$DRY_RUN" != "true" ]; then
    mkdir -p @nuxeo.etc.dir@
fi
cp "$OLDCONF" "$NUXEO_CONF"
chown @package.name.clean@:@package.name.clean@ "$NUXEO_CONF"

# Check whether to move the data dir

MOVE_DATA_DIR="true"
get_conf_var nuxeo.data.dir
if [ "$RET" != "$OLDDATA" ]; then
    MOVE_DATA_DIR="false"
fi

# Check whether to rename the database name and database user
# and whether it was installed by the old package

MOVE_PG="true"
get_conf_var nuxeo.debconf.pgsqldb
if [ "$RET" != "auto" ]; then
    MOVE_PG="false"
fi
get_conf_var nuxeo.db.name
if [ "$RET" != "$OLDDB" ]; then
    MOVE_PG="false"
fi
get_conf_var nuxeo.db.user
if [ "$RET" != "$OLDDB" ]; then
    MOVE_PG="false"
fi
get_conf_var nuxeo.db.host
if [ "$RET" != "localhost" ]; then
    MOVE_PG="false"
fi

# Make sure the server from the old package is stopped

echo "*** Stopping old Nuxeo server ***"

if [ "$DRY_RUN" != "true" ]; then
    $OLDINIT stop
    if [ "$?" != "0" ]; then
        echo "The was a problem stopping the old server - aborting"
        exit 1
    fi
fi

# Change the database name and user

if [ "$MOVE_PG" = "true" ]; then
    echo "*** Moving database ***"
    WIZARDSKIPDB=",DB"
    get_conf_var nuxeo.db.port
    pgport=$RET
    get_conf_var nuxeo.db.password
    pgpass=$RET
    if [ "$DRY_RUN" = "true" ]; then
        echo "Not renaming database and user: dry run"
    else
        pushd /tmp > /dev/null
        su postgres -c "psql -p $pgport template1 --quiet -t -f-" << EOF > /dev/null
ALTER DATABASE $OLDDB RENAME TO @package.name.clean@;
ALTER USER $OLDDB RENAME TO @package.name.clean@;
ALTER USER @package.name.clean@ WITH PASSWORD '$pgpass';
CREATE USER $OLDDB WITH PASSWORD '$pgpass';
CREATE DATABASE $OLDDB WITH OWNER $OLDDB ENCODING='UTF-8';
EOF
        popd > /dev/null
        if [ "$?" != "0" ]; then
            echo "Failed to rename old PostgreSQL database and/or user."
            echo "Package(s) data may be in an inconsistent state."
            exit 1
        fi
    fi
else
    WIZARDSKIPDB=""
fi

# Move data dir

if [ "$MOVE_DATA_DIR" = "true" ]; then
    echo "*** Moving binaries ***"
    if [ "$DRY_RUN" = "true" ]; then
        echo "Not moving $OLDDATA to @nuxeo.data.dir@: dry run"
    else
        rm -rf "@nuxeo.data.dir@"
        mkdir -p @nuxeo.home.dir@
        chown @package.name.clean@:@package.name.clean@ "@nuxeo.home.dir@"
        mv "$OLDDATA" "@nuxeo.data.dir@"
        if [ "$?" != "0" ]; then
            echo "Failed to move $OLDDATA to @nuxeo.data.dir@."
            echo "Package(s) data may be in an inconsistent state."
            exit 1
        fi
        chown -R @package.name.clean@:@package.name.clean@ "@nuxeo.data.dir@"
        if [ "$?" != "0" ]; then
            echo "Failed to grant ownership of @nuxeo.data.dir@ to the @package.name.clean@ user."
            echo "Package(s) data may be in an inconsistent state."
            exit 1
        fi
    fi
fi

# Replace things in the config file

echo "*** Migrating nuxeo.conf ***"

echo "# Values added or modified by the migration script" >> $NUXEO_CONF

get_conf_var nuxeo.data.dir
if [ "$RET" = "$OLDDATA" ]; then
    set_conf_var nuxeo.data.dir @nuxeo.data.dir@
fi

get_conf_var nuxeo.log.dir
if [ "$RET" = "$OLDLOG" ]; then
    set_conf_var nuxeo.log.dir @nuxeo.log.dir@
fi

get_conf_var nuxeo.pid.dir
if [ "$RET" = "$OLDPID" ]; then
    set_conf_var nuxeo.pid.dir @nuxeo.pid.dir@
fi

if [ "$MOVE_PG" = "true" ]; then
    set_conf_var nuxeo.db.name @package.name.clean@
    set_conf_var nuxeo.db.user @package.name.clean@
    set_conf_var nuxeo.installer.installedpg true
    set_conf_var nuxeo.installer.useautopg true
    del_conf_var nuxeo.debconf.pgsqldb
fi


# Re-enable wizard and select preset
#
#echo "*** Reactivating configuration wizard ***"
#
#set_conf_var nuxeo.wizard.skippedpages General$WIZARDSKIPDB
#set_conf_var nuxeo.wizard.done false
#
#WIZPKGDIR="@nuxeo.home.dir@/setupWizardDownloads"
#SELECTIONFILE="$WIZPKGDIR/packages-default-selection.properties"
#if [ "$DRY_RUN" = "true" ]; then
#    echo "Not activating preset nuxeo-$PRODUCT: dry run"
#else
#    mkdir -p $WIZPKGDIR
#    chown @package.name.clean@:@package.name.clean@ "$WIZPKGDIR"
#    echo "#Updated by Nuxeo migration script" > "$SELECTIONFILE"
#    echo "#$(date)" >> "$SELECTIONFILE"
#    echo "preset=nuxeo-$PRODUCT" >> "$SELECTIONFILE"
#    chown @package.name.clean@:@package.name.clean@ "$SELECTIONFILE"
#fi

# Activate preset corresponding to the old package

echo "*** Activating nuxeo-$PRODUCT application module ***"

WIZPKGDIR="@nuxeo.home.dir@/setupWizardDownloads"
MD5=$(cat $WIZPKGDIR/packages.xml | awk "/id=\"nuxeo-$PRODUCT\"/,/\/>/" | grep -oE 'md5="([^"]*)"' | sed -E 's/md5="(.*)"/\1/') || MD5=""
export NUXEO_CONF
su @package.name.clean@ -m -c "@nuxeo.home.dir@/bin/nuxeoctl --quiet mp-install $WIZPKGDIR/$MD5" | grep -v "^Nuxeo home:" | grep -v "Nuxeo configuration:" | grep -v -e "Template .* not found"
export -n NUXEO_CONF


# Disable init script from the old package

echo "*** Disabling old init script ***"
if [ "$DRY_RUN" = "true" ]; then
    echo "Not disabling $OLDINIT: dry run"
else
    mv "$OLDINIT" "$OLDINIT.dpkg-remove"
    cat << EOF > $OLDINIT
#!/bin/bash
if [ "\$1" = "stop" ]; then
    echo "Server already stopped (disabled)"
else
    echo "\$0 disabled - data has been moved to the nuxeo pacakge"
    echo "After checking that your new Nuxeo works correctly,"
    echo "you should purge this package."
fi
exit 0
EOF
    chmod +x $OLDINIT
fi

# All done!

if [ "$DRY_RUN" = "true" ]; then
    echo "*** Migration complete ***"
    echo "The migrated nuxeo.conf is in /tmp/nuxeo.conf.migrate"
else
    echo "**************************************************************"
    echo "*                    Migration complete                      *"
    echo "* Once you have validated that everything works as intended, *"
    echo "* you should remove the now obsolete nuxeo-$PRODUCT package: *"
    echo "* sudo apt-get purge nuxeo-$PRODUCT                          *"
    echo "**************************************************************"
fi

